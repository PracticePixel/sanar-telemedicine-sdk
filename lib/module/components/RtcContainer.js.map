{"version":3,"names":["React","Dimensions","TouchableOpacity","PanResponder","Animated","StyleSheet","I18nManager","Keyboard","Controls","width","height","get","RtcContainer","props","pan","useRef","ValueXY","current","maximizeFrame","setMaximizeFrame","useState","thumbnailMoved","setThumbnailMoved","maxHeight","Value","styles","primaryFrameDimensions","maxWidth","toggleFrame","dismiss","timing","toValue","x","y","duration","useNativeDriver","start","toHeight","toWidth","thumbnailFrameDimensions","panResponder","create","onMoveShouldSetPanResponder","evt","dx","dy","onPanResponderGrant","setOffset","_value","onPanResponderMove","event","onPanResponderRelease","e","gestureState","stickToCorner","isRTL","thresholdWidth","moveXStatus","moveX","isMoved","flattenOffset","spring","container","thumbnailFrame","transform","translateX","translateY","panHandlers","thumbnailClick","children","position","primaryFrame","borderRadius","backgroundColor","flex","zIndex"],"sources":["RtcContainer.js"],"sourcesContent":["import * as React from 'react';\nimport { Dimensions, TouchableOpacity, PanResponder, Animated, StyleSheet, I18nManager, Keyboard } from 'react-native';\nimport Controls from './Controls';\nconst { width, height } = Dimensions.get('window');\n\nconst RtcContainer = (props) => {\n    const pan = React.useRef(new Animated.ValueXY()).current;\n    const [maximizeFrame, setMaximizeFrame] = React.useState(true);\n    const [thumbnailMoved, setThumbnailMoved] = React.useState(false);\n\n    var maxHeight = React.useRef(new Animated.Value(styles.primaryFrameDimensions.height)).current;\n    var maxWidth = React.useRef(new Animated.Value(styles.primaryFrameDimensions.width)).current;\n\n    // maximize or minimize video frame\n    const toggleFrame = () => {\n        Keyboard.dismiss()\n        if (thumbnailMoved) {\n            Animated.timing(pan, {\n                toValue: { x: 0, y: 0 },\n                duration: 500,\n                useNativeDriver: false,\n            }).start();\n        }\n        setMaximizeFrame(!maximizeFrame);\n        var toHeight, toWidth;\n        if (maximizeFrame) {\n            toHeight = styles.thumbnailFrameDimensions.height;\n            toWidth = styles.thumbnailFrameDimensions.width;\n        } else {\n            toHeight = styles.primaryFrameDimensions.height;\n            toWidth = styles.primaryFrameDimensions.width;\n        }\n\n        Animated.timing(\n            maxHeight,\n            {\n                toValue: toHeight,\n                duration: 500,\n                useNativeDriver: false\n            }\n        ).start();\n        Animated.timing(\n            maxWidth,\n            {\n                toValue: toWidth,\n                duration: 500,\n                useNativeDriver: false\n            }\n        ).start();\n    }\n\n    // pan responder start\n    const panResponder = React.useRef(\n        PanResponder.create({\n            // onMoveShouldSetPanResponder: () => true,\n            onMoveShouldSetPanResponder: (evt, { dx, dy }) => {\n                if (dx > 10 || dy > 10) {\n                    return true;\n                }\n                return false;\n            },\n            onPanResponderGrant: () => {\n                pan.setOffset({\n                    x: pan.x._value,\n                    y: pan.y._value\n                });\n            },\n            onPanResponderMove: Animated.event(\n                [\n                    null,\n                    { dx: pan.x, dy: pan.y },\n                ],\n                { useNativeDriver: false }\n            ),\n            onPanResponderRelease: (e, gestureState) => {\n                const stickToCorner = I18nManager.isRTL ? styles.thumbnailFrameDimensions.width - width : width - styles.thumbnailFrameDimensions.width;\n                const thresholdWidth = width / 2;\n                const moveXStatus = I18nManager.isRTL ? (gestureState.moveX < thresholdWidth) : (gestureState.moveX > thresholdWidth);\n                const isMoved = moveXStatus ? true : false;\n                const moveX = isMoved ? stickToCorner : 0;\n                setThumbnailMoved(isMoved);\n                pan.flattenOffset();\n                Animated.spring(pan, {\n                    toValue: { x: moveX, y: 0 },\n                    useNativeDriver: false\n                },\n                ).start();\n            }\n        })\n    ).current;\n    // pan responder end\n\n    return (\n        <>\n            <Animated.View\n                style={[\n                    styles.container, styles.thumbnailFrame,\n                    { height: maxHeight, width: maxWidth },\n                    {\n                        transform: [\n                            { translateX: pan.x },\n                            { translateY: pan.y }\n                        ]\n                    }\n                ]}\n                {...panResponder.panHandlers} >\n                <TouchableOpacity\n                    style={[styles.container, { height: '100%', width: '100%' }, styles.thumbnailClick]}\n                    onPress={() => { !maximizeFrame && toggleFrame() }}>\n                    {props.children}\n                </TouchableOpacity>\n            </Animated.View>\n            {(maximizeFrame) &&\n                <Controls toggleFrame={toggleFrame} />\n            }\n        </>\n    )\n};\n\nexport default RtcContainer;\n\nconst styles = StyleSheet.create({\n    container: {\n        // backgroundColor: theme.colors.callBackground,\n        position: 'absolute'\n    },\n    primaryFrame: {\n        // backgroundColor: theme.colors.callBackground,\n        borderRadius: 5\n    },\n    thumbnailFrame: {\n        backgroundColor: \"grey\",\n        borderRadius: 5\n    },\n    thumbnailFrameDimensions: {\n        height: 250,\n        width: 150\n    },\n    primaryFrameDimensions: {\n        height: height + 100,\n        width: width\n    },\n    thumbnailClick: {\n        flex: 1,\n        zIndex: 99999\n    },\n});\n"],"mappings":"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"}